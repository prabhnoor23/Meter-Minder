@{
    Layout = "~/Views/Shared/_TwoColumnLayout.cshtml";
}
@{
    int counter = 1;
}
@model Pspcl.Web.ViewModels.StockViewModel
<div class="main-content">
    <div class="page-content">
        <div id="loadingIndicator" class="loading-indicator" style="display: none;">
            <div class="spinner"></div>
        </div>

        <div class="container-fluid">
            <!-- start page title -->
            <div class="row">
                <div class="col-md-12 ">
                    <!-- <div class="hld-left m-0 mt-md-3"> -->
                    <div class="m-0 mt-md-3">
                        <div class="row">
                            <div class="col-md-12 col-lg-12">
                                <h1 class="heading text-uppercase">Electricity Meter Management</h1>
                                <div class="row mt-3">
                                    <div class="col-md-6">
                                        <h2 class="h2-heading">Stock Preview</h2>                                    
                                    </div>
                                    <div class="col-md-6 text-right">
                                    </div>
                                </div>
                                @using (Html.BeginForm("Preview", "Preview", new { @class = "mt-4", id = "StockForm" }))
                                {
                                    <div class="row">
                                        <div class="form-group col-md-6">
                                            <label for="">Material code</label>
                                            @Html.TextBoxFor(m => m.SelectedMaterialCodeName, new { @readonly = "readonly" , @class = "form-control"})
                                            <div class="invalid-feedback">
                                                @Html.HiddenFor(m => m.MaterialIdByCode, new { @name="materialCode"})
                                                <div class="invalid-feedback">
                                                    Please provide a valid state.
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group col-md-6">
                                            <label for="inputState">Material Group</label>
                                            @Html.TextBoxFor(m => m.SelectedMaterialGroupName, new { @readonly = "readonly" , @class = "form-control"})
                                            <div class="invalid-feedback">
                                                @Html.HiddenFor(m => m.MaterialGroupId, new { @name="materialGroup"})
                                                <div class="valid-feedback">
                                                    Looks good!
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="GRNdate">Select GRN Date</label>
                                            @Html.TextBoxFor(m => m.GrnDate, "{0:d}", new { @readonly = "readonly" , @class = "form-control",@name="GRNDate"})
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="materialType">Material Type</label>
                                            @Html.TextBoxFor(m => m.SelectedMaterialTypeName, new { @readonly = "readonly" , @class = "form-control",@name="materialType"})
                                            @Html.HiddenFor(m => m.MaterialTypeId, new { @name="materialType"})
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="GRNno">GRN No</label>
                                            @Html.TextBoxFor(m => m.GrnNumber, new { @readonly = "readonly" , @class = "form-control",@name="GrnNO"})
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="Rating">Rating</label>
                                            @Html.TextBoxFor(m => m.SelectedRatingName, new { @readonly = "readonly" , @class = "form-control",@name="rating", @value=Model.MaterialTypeId})
                                            <input type="hidden" name="rating" value="@Model.Rating" />
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="TestReport">Test Report Reference</label>
                                            @Html.TextBoxFor(m => m.TestReportReference, new { @readonly = "readonly" , @class = "form-control",@name="TestReportReference"})
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="">Make</label>
                                            @Html.TextBoxFor(m => m.Make, new { @class = "form-control", @required = "required", placeholder = "Make", @readonly = "readonly" })
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="Invoicedate">Invoice Date</label>
                                            @Html.TextBoxFor(m => m.InvoiceDate, "{0:d}", new { @readonly = "readonly" , @class = "form-control",@name="InvoiceDate"})
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="Rate">Rate</label>
                                            @Html.TextBoxFor(m => m.Rate, new { @readonly = "readonly" , @class = "form-control", @name="rate"})
                                            <small id="emailHelp" class="form-text text-muted">Unit Num Value, Max 1000000</small>
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="InvoiceNo">Invoice No.</label>
                                            @Html.TextBoxFor(m => m.InvoiceNumber, new { @readonly = "readonly" , @class = "form-control",@name="InvoiceNo"})
                                            <small id="emailHelp" class="form-text text-muted">Add invoice also.</small>
                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label for="Prefixqty">Prefix</label>
                                            @Html.TextBoxFor(m => m.PrefixNumber, new { @readonly = "readonly" , @class = "form-control",@name="PrefixNumber"})                                            <div class="invalid-feedback">
                                                Please provide a valid state.
                                            </div>
                                        </div>

                                    </div>

                                    <div class="mt-3 mb-5 border-black-top pt-4">
                                        <table class="table table-responsive custom-table">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th scope="col">Sr. No From</th>
                                                    <th scope="col">Sr. No To</th>
                                                    <th scope="col">QTY</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.stockMaterialList)
                                                {
                                                    <tr>
                                                        <td><input name="row_' + @counter + '_from" type="text" class="from-input" value="@item.SerialNumberFrom" required readonly></td>
                                                        <td><input name="row_' + @counter + '_to" type="text" class="to-input" value="@item.SerialNumberTo" required readonly></td>
                                                        <td><input name="row_' + @counter + '_qty" type="text" class="qty-input" value="@item.Quantity" readonly></td>
                                                    </tr>
                                                    counter++;
                                                }
                                            </tbody>
                                        </table>
                                        <div class="text-center">
                                            <button type="submit" id="saveStock" name="save" value="save" formmethod="post" class="btn btn-dark blackButton px-4 mt-3 mr-2" data-toggle="modal" data-target=".bd-example-modal-sm">Save</button>
                                            <button type="submit" name="save" value="modify" formmethod="post" class="btn btn btn-outline-dark px-4 mt-3">Modify</button>
                                        </div>
                                        <!-- Modal-->
                                       
                                  </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>